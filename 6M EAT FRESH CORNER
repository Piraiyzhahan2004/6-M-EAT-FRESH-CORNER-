<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>6M EAT FRESH CORNER - Daily Accounts</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f2f2f2;
    }
    header {
      background-color: #4caf50;
      color: white;
      padding: 20px;
      text-align: center;
    }
    .date-display {
      font-size: 14px;
      margin-top: 5px;
    }
    .container {
      max-width: 800px;
      margin: 20px auto;
      padding: 20px;
      background: #ffffff;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    label {
      display: block;
      margin-top: 10px;
    }
    input {
      width: 100%;
      padding: 8px;
      margin-top: 5px;
      box-sizing: border-box;
    }
    button {
      margin-top: 15px;
      padding: 10px;
      width: 100%;
      background-color: #4caf50;
      color: white;
      border: none;
      border-radius: 5px;
      font-size: 16px;
    }
    .result {
      margin-top: 20px;
      padding: 10px;
      background: #e3ffe3;
      font-weight: bold;
      border-radius: 5px;
      text-align: center;
    }
    canvas {
      margin-top: 40px;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }
    th, td {
      padding: 10px;
      border: 1px solid #ccc;
      text-align: center;
    }
    th {
      background-color: #f9f9f9;
    }
  </style>
</head>
<body>
  <header>
    <h1>6M EAT FRESH CORNER</h1>
    <div class="date-display" id="dateDisplay"></div>
  </header>

  <div class="container">
    <label>Total Sales (LKR)</label>
    <input type="number" id="sales" placeholder="e.g. 10000" />

    <label>Total Purchase (LKR)</label>
    <input type="number" id="purchase" placeholder="e.g. 4000" />

    <label>Salary (LKR)</label>
    <input type="number" id="salary" placeholder="e.g. 2000" />

    <label>Rent (LKR)</label>
    <input type="number" id="rent" placeholder="e.g. 1000" />

    <label>Electricity (LKR)</label>
    <input type="number" id="electricity" placeholder="e.g. 500" />

    <button onclick="calculateProfit()">Calculate & Save</button>

    <div class="result" id="result"></div>

    <canvas id="profitChart"></canvas>

    <table id="historyTable">
      <thead>
        <tr>
          <th>Date</th>
          <th>Sales</th>
          <th>Expenses</th>
          <th>Profit</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
  </div>

  <script>
    let profitHistory = JSON.parse(localStorage.getItem("profitHistory")) || [];
    let labels = JSON.parse(localStorage.getItem("labels")) || [];
    let salesHistory = JSON.parse(localStorage.getItem("salesHistory")) || [];
    let expensesHistory = JSON.parse(localStorage.getItem("expensesHistory")) || [];
    let chart;

    document.getElementById("dateDisplay").innerText = "ðŸ“… Today: " + new Date().toLocaleDateString();
    window.onload = () => {
      updateHistoryTable();
      updateChart();
    };

    function calculateProfit() {
      const sales = Number(document.getElementById('sales').value);
      const purchase = Number(document.getElementById('purchase').value);
      const salary = Number(document.getElementById('salary').value);
      const rent = Number(document.getElementById('rent').value);
      const electricity = Number(document.getElementById('electricity').value);

      const expenses = purchase + salary + rent + electricity;
      const profit = sales - expenses;
      const today = new Date().toLocaleDateString();

      labels.push(today);
      salesHistory.push(sales);
      expensesHistory.push(expenses);
      profitHistory.push(profit);

      localStorage.setItem("labels", JSON.stringify(labels));
      localStorage.setItem("salesHistory", JSON.stringify(salesHistory));
      localStorage.setItem("expensesHistory", JSON.stringify(expensesHistory));
      localStorage.setItem("profitHistory", JSON.stringify(profitHistory));

      document.getElementById('result').innerHTML = `
        ðŸ”¹ Expenses: LKR ${expenses}<br>
        âœ… Profit: LKR ${profit}
      `;

      addRowToTable(today, sales, expenses, profit);
      updateChart();
      clearInputs();
    }

    function addRowToTable(date, sales, expenses, profit) {
      const row = document.getElementById("historyTable").getElementsByTagName("tbody")[0].insertRow();
      row.innerHTML = `
        <td>${date}</td>
        <td>${sales}</td>
        <td>${expenses}</td>
        <td>${profit}</td>
      `;
    }

    function updateHistoryTable() {
      const tbody = document.getElementById("historyTable").getElementsByTagName("tbody")[0];
      tbody.innerHTML = '';
      for (let i = 0; i < labels.length; i++) {
        addRowToTable(labels[i], salesHistory[i], expensesHistory[i], profitHistory[i]);
      }
    }

    function updateChart() {
      const ctx = document.getElementById('profitChart').getContext('2d');
      if (chart) chart.destroy();
      chart = new Chart(ctx, {
        type: 'line',
        data: {
          labels: labels,
          datasets: [{
            label: 'Profit (LKR)',
            data: profitHistory,
            backgroundColor: 'rgba(76, 175, 80, 0.2)',
            borderColor: 'rgba(76, 175, 80, 1)',
            borderWidth: 2,
            fill: true,
            tension: 0.1
          }]
        },
        options: {
          responsive: true,
          scales: {
            y: { beginAtZero: true }
          }
        }
      });
    }

    function clearInputs() {
      document.getElementById('sales').value = '';
      document.getElementById('purchase').value = '';
      document.getElementById('salary').value = '';
      document.getElementById('rent').value = '';
      document.getElementById('electricity').value = '';
    }
  </script>
</body>
</html>
